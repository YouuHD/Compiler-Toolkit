<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAEMAQwDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDwl/vH602pmTJJqJkweRQBHJ2qM1MUB9qTyx60hENFTeWKYYzm
        mMZRUywFgcHpUnkIkJZzz2oAq0UVo6To11rFyIbdcnIycdM0AZ6qWOACSegFbGl+GdR1SYJHCVXjLGvT
        NE+HdrYokl0qyT4yQV6V2umaUtmgZY1QegGKAOD0zwEllCpljXfxye9dhY6AbeEKqqAPSt8plgalWPig
        DLXTGJCt+FXVs1C7W/hq4ENSomelAGYbBWOFbGf1rJvtHViwe3R1brurrhFkVFJD0oA8W8Q/Dcuj3Vmu
        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
        vUMK2NbkE96kidDEtYNW0kbaKBH/2Q==
</value>
  </data>
</root>